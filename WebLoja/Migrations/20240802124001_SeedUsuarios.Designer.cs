// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebLoja.Data;

#nullable disable

namespace WebLoja.Migrations
{
    [DbContext(typeof(WebLojaContext))]
    [Migration("20240802124001_SeedUsuarios")]
    partial class SeedUsuarios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebLoja.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Autenticacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autenticacao = "SKmH48EJHaCuj+528OWOzr9r17D/qwOxxzRplydB+Nc=",
                            Email = "cliente@cliente.com",
                            Endereco = "Rua Ribeirão Preto, 75 Mauá-SP",
                            Nome = "Cliente"
                        },
                        new
                        {
                            Id = 2,
                            Autenticacao = "r2wwX8N1W1w7pocd+OMMPVwkEh3JkZ+1gW/momxDnq0=",
                            Email = "admin@admin",
                            Endereco = "Rua Ribeirão Preto, 75 Mauá-SP",
                            Nome = "Administrador"
                        });
                });

            modelBuilder.Entity("WebLoja.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "",
                            Descricao = "",
                            Foto = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQY6giYFcAsV5wX9z0E5sudLWKwATbkO3IoUQ&s",
                            Nome = "SNES",
                            Preco = 15000m
                        },
                        new
                        {
                            Id = 2,
                            Categoria = "",
                            Descricao = "",
                            Foto = "https://lazamodz.com/cdn/shop/files/PS1Classic_800x.png?v=1698695300",
                            Nome = "PS5 Controller",
                            Preco = 1500m
                        },
                        new
                        {
                            Id = 3,
                            Categoria = "",
                            Descricao = "",
                            Foto = "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/NEC-TurboExpress-Upright-FL.jpg/220px-NEC-TurboExpress-Upright-FL.jpg",
                            Nome = "Turbo Express",
                            Preco = 15000m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
